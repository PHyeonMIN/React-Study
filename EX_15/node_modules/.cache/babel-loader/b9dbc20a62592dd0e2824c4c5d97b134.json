{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yeoboya\\\\git\\\\react_study\\\\EX_14\\\\src\\\\components\\\\comments\\\\NewCommentForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport classes from \"./NewCommentForm.module.css\";\nimport useHttp from \"../../hooks/use-http\";\nimport { addComment } from \"../../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewCommentForm = props => {\n  _s();\n\n  const commentTextRef = useRef();\n  const {\n    sendRequest,\n    status,\n    error\n  } = useHttp(addComment);\n  const {\n    onAddedComment\n  } = props;\n  useEffect(() => {\n    if (status === 'completed' && !error) {\n      onAddedComment();\n    }\n  }, [status, error, onAddedComment]);\n\n  const submitFormHandler = event => {\n    event.preventDefault();\n    const enteredText = commentTextRef.current.value; // optional: Could validate here\n    // send comment to server\n\n    sendRequest({\n      text: enteredText\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: submitFormHandler,\n    children: [status === \"pending\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      onSubmit: submitFormHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"comment\",\n        children: \"Your Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"comment\",\n        rows: \"5\",\n        ref: commentTextRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        children: \"Add Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewCommentForm, \"7mtj8XMrl0IoBolXtWS0+wz53kY=\", false, function () {\n  return [useHttp];\n});\n\n_c = NewCommentForm;\nexport default NewCommentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewCommentForm\");","map":{"version":3,"sources":["C:/Users/yeoboya/git/react_study/EX_14/src/components/comments/NewCommentForm.js"],"names":["React","useRef","useEffect","useParams","classes","useHttp","addComment","LoadingSpinner","NewCommentForm","props","commentTextRef","sendRequest","status","error","onAddedComment","submitFormHandler","event","preventDefault","enteredText","current","value","text","form","control","actions"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,QAAyC,OAAzC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,OAAP,MAAoB,6BAApB;AAEA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAASC,UAAT,QAA2B,eAA3B;AACA,OAAOC,cAAP,MAA2B,sBAA3B;;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAAA;;AAChC,QAAMC,cAAc,GAAGT,MAAM,EAA7B;AAEA,QAAM;AAAEU,IAAAA,WAAF;AAAeC,IAAAA,MAAf;AAAwBC,IAAAA;AAAxB,MAAkCR,OAAO,CAACC,UAAD,CAA/C;AAEA,QAAM;AAAEQ,IAAAA;AAAF,MAAqBL,KAA3B;AAEAP,EAAAA,SAAS,CAAC,MAAI;AACZ,QAAGU,MAAM,KAAI,WAAV,IAAyB,CAACC,KAA7B,EAAmC;AACjCC,MAAAA,cAAc;AACf;AACF,GAJQ,EAIP,CAACF,MAAD,EAAQC,KAAR,EAAcC,cAAd,CAJO,CAAT;;AAMA,QAAMC,iBAAiB,GAAIC,KAAD,IAAW;AACnCA,IAAAA,KAAK,CAACC,cAAN;AAEA,UAAMC,WAAW,GAAGR,cAAc,CAACS,OAAf,CAAuBC,KAA3C,CAHmC,CAInC;AAEA;;AACAT,IAAAA,WAAW,CAAC;AAAEU,MAAAA,IAAI,EAAEH;AAAR,KAAD,CAAX;AACD,GARD;;AAUA,sBACE;AAAM,IAAA,SAAS,EAAEd,OAAO,CAACkB,IAAzB;AAA+B,IAAA,QAAQ,EAAEP,iBAAzC;AAAA,eACGH,MAAM,KAAK,SAAX,iBACC;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFJ,eAME;AAAK,MAAA,SAAS,EAAER,OAAO,CAACmB,OAAxB;AAAiC,MAAA,QAAQ,EAAER,iBAA3C;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAU,QAAA,EAAE,EAAC,SAAb;AAAuB,QAAA,IAAI,EAAC,GAA5B;AAAgC,QAAA,GAAG,EAAEL;AAArC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,eAUE;AAAK,MAAA,SAAS,EAAEN,OAAO,CAACoB,OAAxB;AAAA,6BACE;AAAQ,QAAA,SAAS,EAAC,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CAvCD;;GAAMhB,c;UAGoCH,O;;;KAHpCG,c;AAyCN,eAAeA,cAAf","sourcesContent":["import React, { useRef, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport classes from \"./NewCommentForm.module.css\";\n\nimport useHttp from \"../../hooks/use-http\";\nimport { addComment } from \"../../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n\n  const { sendRequest, status , error } = useHttp(addComment);\n\n  const { onAddedComment } = props;\n\n  useEffect(()=>{\n    if(status ==='completed' && !error){\n      onAddedComment();\n    }\n  },[status,error,onAddedComment]);\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    const enteredText = commentTextRef.current.value;\n    // optional: Could validate here\n\n    // send comment to server\n    sendRequest({ text: enteredText });\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {status === \"pending\" && (\n        <div className=\"centered\">\n          <LoadingSpinner />\n        </div>\n      )}\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor=\"comment\">Your Comment</label>\n        <textarea id=\"comment\" rows=\"5\" ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className=\"btn\">Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n"]},"metadata":{},"sourceType":"module"}