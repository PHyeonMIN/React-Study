{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yeoboya\\\\git\\\\react_study\\\\EX_10\\\\src\\\\components\\\\NewTask\\\\NewTask.js\";\nimport React from \"react\";\nimport Section from \"../UI/Section\";\nimport TaskForm from \"./TaskForm\";\nimport useHttp from \"../../hooks/use-http\";\n\nconst NewTask = props => {\n  const {\n    isLoading,\n    error,\n    sendRequest: sendTaskRequest\n  } = useHttp();\n\n  const createTask = (taskText, taskData) => {\n    const generatedId = taskData.name; // firebase-specific => \"name\" contains generated id\n\n    const createdTask = {\n      id: generatedId,\n      text: taskText\n    };\n    props.onAddTask(createdTask);\n  };\n\n  const enterTaskHandler = async taskText => {\n    sendTaskRequest({\n      url: \"https://react-http-f8b8f-default-rtdb.firebaseio.com/tasks.json\",\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: {\n        text: taskText\n      }\n    }, createTask.bind(null, taskText)); // bind 메소드는 함수를 사전에 구성할 수 있게 해줌\n  };\n\n  return /*#__PURE__*/React.createElement(Section, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 10\n    }\n  }, \"const \", is, \" = \");\n};\n\nexport default NewTask;","map":{"version":3,"sources":["C:/Users/yeoboya/git/react_study/EX_10/src/components/NewTask/NewTask.js"],"names":["React","Section","TaskForm","useHttp","NewTask","props","isLoading","error","sendRequest","sendTaskRequest","createTask","taskText","taskData","generatedId","name","createdTask","id","text","onAddTask","enterTaskHandler","url","method","headers","body","bind","is"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AACzB,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,KAAb;AAAoBC,IAAAA,WAAW,EAAEC;AAAjC,MAAqDN,OAAO,EAAlE;;AAEA,QAAMO,UAAU,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAwB;AACzC,UAAMC,WAAW,GAAGD,QAAQ,CAACE,IAA7B,CADyC,CACN;;AACnC,UAAMC,WAAW,GAAG;AAAEC,MAAAA,EAAE,EAAEH,WAAN;AAAmBI,MAAAA,IAAI,EAAEN;AAAzB,KAApB;AAEAN,IAAAA,KAAK,CAACa,SAAN,CAAgBH,WAAhB;AACD,GALD;;AAOA,QAAMI,gBAAgB,GAAG,MAAOR,QAAP,IAAoB;AAC3CF,IAAAA,eAAe,CAAC;AACdW,MAAAA,GAAG,EAAE,iEADS;AAEdC,MAAAA,MAAM,EAAE,MAFM;AAGdC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAHK;AAMdC,MAAAA,IAAI,EAAE;AAAEN,QAAAA,IAAI,EAAEN;AAAR;AANQ,KAAD,EAObD,UAAU,CAACc,IAAX,CAAgB,IAAhB,EAAqBb,QAArB,CAPa,CAAf,CAD2C,CAQ8B;AAE1E,GAVD;;AAYA,sBAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAgBc,EAAhB,QAAP;AACD,CAvBD;;AAyBA,eAAerB,OAAf","sourcesContent":["import React from \"react\";\n\nimport Section from \"../UI/Section\";\nimport TaskForm from \"./TaskForm\";\nimport useHttp from \"../../hooks/use-http\";\n\nconst NewTask = (props) => {\n  const { isLoading, error, sendRequest: sendTaskRequest } = useHttp();\n\n  const createTask = (taskText, taskData) => {\n    const generatedId = taskData.name; // firebase-specific => \"name\" contains generated id\n    const createdTask = { id: generatedId, text: taskText };\n\n    props.onAddTask(createdTask);\n  };\n\n  const enterTaskHandler = async (taskText) => {\n    sendTaskRequest({\n      url: \"https://react-http-f8b8f-default-rtdb.firebaseio.com/tasks.json\",\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: { text: taskText }\n    },createTask.bind(null,taskText));                                       // bind 메소드는 함수를 사전에 구성할 수 있게 해줌\n    \n  };\n\n  return <Section>const {is} = </Section>;\n};\n\nexport default NewTask;\n"]},"metadata":{},"sourceType":"module"}