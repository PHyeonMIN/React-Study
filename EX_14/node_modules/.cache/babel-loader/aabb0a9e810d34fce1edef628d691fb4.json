{"ast":null,"code":"import { useReducer } from \"react\";\nconst initialInputState = {\n  value: \"\",\n  isTouched: false\n};\n\nconst inputStateReducer = (state, action) => {\n  if (action.type === 'INPUT') {\n    return {\n      value: action.value,\n      isTouched: state.isTouched\n    };\n  }\n\n  if (action.type === 'BLUR') {\n    return {\n      isTouched: true,\n      value: state.value\n    };\n  }\n\n  if (action.type === 'RESET') {\n    return {\n      isTouched: false,\n      value: ''\n    };\n  }\n\n  return initialInputState;\n};\n\nconst useInput = validateValue => {\n  const [inputState, dispatch] = useReducer(inputStateReducer, initialInputState);\n  const valueIsValid = validateValue(inputState.value);\n  const hasError = !valueIsValid && inputState.isTouched;\n\n  const valueChangeHandler = event => {\n    dispatch({\n      type: 'INPUT',\n      value: event.target.value\n    });\n  };\n\n  const inputBlurHandler = event => {\n    dispatch({\n      type: 'BLUR'\n    });\n  };\n\n  const reset = () => {\n    dispatch({\n      type: 'RESET'\n    });\n  };\n\n  return {\n    value: inputState.value,\n    isValid: valueIsValid,\n    hasError,\n    valueChangeHandler,\n    inputBlurHandler,\n    reset\n  };\n};\n\nexport default useInput;","map":{"version":3,"sources":["C:/Users/yeoboya/git/react_study/EX_11/src/hooks/use-input.js"],"names":["useReducer","initialInputState","value","isTouched","inputStateReducer","state","action","type","useInput","validateValue","inputState","dispatch","valueIsValid","hasError","valueChangeHandler","event","target","inputBlurHandler","reset","isValid"],"mappings":"AAAA,SAASA,UAAT,QAA2B,OAA3B;AAEA,MAAMC,iBAAiB,GAAG;AACxBC,EAAAA,KAAK,EAAE,EADiB;AAExBC,EAAAA,SAAS,EAAE;AAFa,CAA1B;;AAKA,MAAMC,iBAAiB,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACzC,MAAGA,MAAM,CAACC,IAAP,KAAe,OAAlB,EAA0B;AACtB,WAAO;AAAEL,MAAAA,KAAK,EAAEI,MAAM,CAACJ,KAAhB;AAAuBC,MAAAA,SAAS,EAAEE,KAAK,CAACF;AAAxC,KAAP;AACH;;AACD,MAAGG,MAAM,CAACC,IAAP,KAAe,MAAlB,EAAyB;AACrB,WAAO;AAACJ,MAAAA,SAAS,EAAC,IAAX;AAAiBD,MAAAA,KAAK,EAACG,KAAK,CAACH;AAA7B,KAAP;AACH;;AACD,MAAGI,MAAM,CAACC,IAAP,KAAe,OAAlB,EAA0B;AACtB,WAAO;AAACJ,MAAAA,SAAS,EAAE,KAAZ;AAAoBD,MAAAA,KAAK,EAAC;AAA1B,KAAP;AACH;;AACH,SAAOD,iBAAP;AACD,CAXD;;AAaA,MAAMO,QAAQ,GAAIC,aAAD,IAAmB;AAClC,QAAM,CAACC,UAAD,EAAaC,QAAb,IAAyBX,UAAU,CAACI,iBAAD,EAAoBH,iBAApB,CAAzC;AAEA,QAAMW,YAAY,GAAGH,aAAa,CAACC,UAAU,CAACR,KAAZ,CAAlC;AACA,QAAMW,QAAQ,GAAG,CAACD,YAAD,IAAiBF,UAAU,CAACP,SAA7C;;AAEA,QAAMW,kBAAkB,GAAIC,KAAD,IAAW;AAClCJ,IAAAA,QAAQ,CAAC;AAACJ,MAAAA,IAAI,EAAC,OAAN;AAAeL,MAAAA,KAAK,EAACa,KAAK,CAACC,MAAN,CAAad;AAAlC,KAAD,CAAR;AACH,GAFD;;AAIA,QAAMe,gBAAgB,GAAIF,KAAD,IAAW;AAChCJ,IAAAA,QAAQ,CAAC;AAACJ,MAAAA,IAAI,EAAC;AAAN,KAAD,CAAR;AACH,GAFD;;AAIA,QAAMW,KAAK,GAAG,MAAM;AAChBP,IAAAA,QAAQ,CAAC;AAACJ,MAAAA,IAAI,EAAC;AAAN,KAAD,CAAR;AACH,GAFD;;AAIA,SAAO;AACLL,IAAAA,KAAK,EAAEQ,UAAU,CAACR,KADb;AAELiB,IAAAA,OAAO,EAAEP,YAFJ;AAGLC,IAAAA,QAHK;AAILC,IAAAA,kBAJK;AAKLG,IAAAA,gBALK;AAMLC,IAAAA;AANK,GAAP;AAQD,CA1BD;;AA4BA,eAAeV,QAAf","sourcesContent":["import { useReducer } from \"react\";\r\n\r\nconst initialInputState = {\r\n  value: \"\",\r\n  isTouched: false,\r\n};\r\n\r\nconst inputStateReducer = (state, action) => {\r\n    if(action.type ==='INPUT'){\r\n        return { value: action.value, isTouched: state.isTouched };\r\n    }\r\n    if(action.type ==='BLUR'){\r\n        return {isTouched:true, value:state.value};\r\n    }\r\n    if(action.type ==='RESET'){\r\n        return {isTouched: false  ,value:'' }\r\n    }\r\n  return initialInputState;\r\n};\r\n\r\nconst useInput = (validateValue) => {\r\n  const [inputState, dispatch] = useReducer(inputStateReducer, initialInputState);\r\n\r\n  const valueIsValid = validateValue(inputState.value);\r\n  const hasError = !valueIsValid && inputState.isTouched;\r\n\r\n  const valueChangeHandler = (event) => {\r\n      dispatch({type:'INPUT', value:event.target.value});  \r\n  };\r\n\r\n  const inputBlurHandler = (event) => {\r\n      dispatch({type:'BLUR'})\r\n  };\r\n\r\n  const reset = () => {\r\n      dispatch({type:'RESET'});\r\n  };\r\n\r\n  return {\r\n    value: inputState.value,\r\n    isValid: valueIsValid,\r\n    hasError,\r\n    valueChangeHandler,\r\n    inputBlurHandler,\r\n    reset,\r\n  };\r\n};\r\n\r\nexport default useInput;\r\n"]},"metadata":{},"sourceType":"module"}