{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\yeoboya\\\\git\\\\react_study\\\\EX_16\\\\pages\\\\index.js\",\n    _this = this;\n\nimport { Fragment } from \"react\";\nimport Head from \"next/head\";\nimport MeetupList from \"../components/meetups/MeetupList\";\n\nvar Homepage = function Homepage(props) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"React Meetups\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: \"Browse a huge list of highly active React meetups!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(MeetupList, {\n      meetups: props.meetups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, _this);\n};\n/*\r\n// 요청이 들어올 때 마다 실행 -> 요청이 들어올 때까지 페이지가 만들어지길 기다려야함\r\n// 매초 여러 번 바뀌는 데이터를 가지고 있을 때 사용\r\nexport const getServerSideProps = async (context) => {\r\n    //context로 요청객체 접속 가능 \r\n  const req = context.req;\r\n  const res = context.res;\r\n\r\n  return {\r\n    props: {\r\n      meetups: DUMMY_MEETUPS,\r\n    },\r\n  };\r\n};\r\n*/\n// revalidate 시간마다 실행\n// 데이터를 다시 만들고 패치하는 것보다 빠르다. -> 캐시하고 다시 사용하기에\n\n\n_c = Homepage;\nexport var __N_SSG = true;\nexport default Homepage;\n\nvar _c;\n\n$RefreshReg$(_c, \"Homepage\");","map":{"version":3,"sources":["C:/Users/yeoboya/git/react_study/EX_16/pages/index.js"],"names":["Fragment","Head","MeetupList","Homepage","props","meetups"],"mappings":";;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,OAAOC,UAAP,MAAuB,kCAAvB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAW;AAC1B,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,IAAD;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE;AACE,QAAA,IAAI,EAAC,aADP;AAEE,QAAA,OAAO,EAAC;AAFV;AAAA;AAAA;AAAA;AAAA,eAFF;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAQE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,aARF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAYD,CAbD;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;KAhCMF,Q;;AAuDN,eAAeA,QAAf","sourcesContent":["import { Fragment } from \"react\";\r\nimport Head from \"next/head\";\r\nimport { MongoClient } from \"mongodb\";\r\nimport MeetupList from \"../components/meetups/MeetupList\";\r\n\r\nconst Homepage = (props) => {\r\n  return (\r\n    <Fragment>\r\n      <Head>\r\n        <title>React Meetups</title>\r\n        <meta\r\n          name=\"description\"\r\n          content=\"Browse a huge list of highly active React meetups!\"\r\n        />\r\n      </Head>\r\n      <MeetupList meetups={props.meetups} />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\n/*\r\n// 요청이 들어올 때 마다 실행 -> 요청이 들어올 때까지 페이지가 만들어지길 기다려야함\r\n// 매초 여러 번 바뀌는 데이터를 가지고 있을 때 사용\r\nexport const getServerSideProps = async (context) => {\r\n    //context로 요청객체 접속 가능 \r\n  const req = context.req;\r\n  const res = context.res;\r\n\r\n  return {\r\n    props: {\r\n      meetups: DUMMY_MEETUPS,\r\n    },\r\n  };\r\n};\r\n*/\r\n\r\n// revalidate 시간마다 실행\r\n// 데이터를 다시 만들고 패치하는 것보다 빠르다. -> 캐시하고 다시 사용하기에\r\nexport const getStaticProps = async () => {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://123:Cgjqv93Nzs1OrsoJ@cluster0.jyvgm.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n  const meetups = await meetupsCollection.find().toArray();\r\n  client.close();\r\n\r\n  return {\r\n    props: {\r\n      meetups: meetups.map((meetup) => ({\r\n        title: meetup.title,\r\n        address: meetup.address,\r\n        image: meetup.image,\r\n        id: meetup._id.toString(),\r\n      })),\r\n    },\r\n    revalidate: 1,\r\n  };\r\n};\r\n\r\nexport default Homepage;\r\n"]},"metadata":{},"sourceType":"module"}