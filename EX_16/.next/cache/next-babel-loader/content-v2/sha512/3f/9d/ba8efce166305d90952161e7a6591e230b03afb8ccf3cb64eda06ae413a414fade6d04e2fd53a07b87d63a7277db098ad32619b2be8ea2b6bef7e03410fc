{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\yeoboya\\\\git\\\\react_study\\\\EX_16\\\\pages\\\\index.js\",\n    _this = this;\n\nimport MeetupList from \"../components/meetups/MeetupList\";\n\nvar Homepage = function Homepage(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupList, {\n    meetups: props.meetups\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 10\n  }, _this);\n};\n/*\r\n// 요청이 들어올 때 마다 실행 -> 요청이 들어올 때까지 페이지가 만들어지길 기다려야함\r\n// 매초 여러 번 바뀌는 데이터를 가지고 있을 때 사용\r\nexport const getServerSideProps = async (context) => {\r\n    //context로 요청객체 접속 가능 \r\n  const req = context.req;\r\n  const res = context.res;\r\n\r\n  return {\r\n    props: {\r\n      meetups: DUMMY_MEETUPS,\r\n    },\r\n  };\r\n};\r\n*/\n// revalidate 시간마다 실행\n// 데이터를 다시 만들고 패치하는 것보다 빠르다. -> 캐시하고 다시 사용하기에\n\n\n_c = Homepage;\nexport var __N_SSG = true;\nexport default Homepage;\n\nvar _c;\n\n$RefreshReg$(_c, \"Homepage\");","map":{"version":3,"sources":["C:/Users/yeoboya/git/react_study/EX_16/pages/index.js"],"names":["MeetupList","Homepage","props","meetups"],"mappings":";;;;;AAAA,OAAOA,UAAP,MAAuB,kCAAvB;;AAqBA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAW;AAC1B,sBAAO,QAAC,UAAD;AAAY,IAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,WAAP;AACD,CAFD;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;;;KAtBMF,Q;;AA8BN,eAAeA,QAAf","sourcesContent":["import MeetupList from \"../components/meetups/MeetupList\";\r\n\r\nconst DUMMY_MEETUPS = [\r\n  {\r\n    id: \"m1\",\r\n    title: \"A First Meetup\",\r\n    image:\r\n      \"https://helpx.adobe.com/content/dam/help/en/photoshop/how-to/compositing/jcr%3acontent/main-pars/image/compositing_1408x792.jpg\",\r\n    address: \"Some address 5, 12345 Some City\",\r\n    description: \"This is a first meetup!\",\r\n  },\r\n  {\r\n    id: \"m2\",\r\n    title: \"A Second Meetup\",\r\n    image:\r\n      \"https://helpx.adobe.com/content/dam/help/en/photoshop/how-to/compositing/jcr%3acontent/main-pars/image/compositing_1408x792.jpg\",\r\n    address: \"Some address 10, 12345 Some City\",\r\n    description: \"This is a first meetup!\",\r\n  },\r\n];\r\n\r\nconst Homepage = (props) => {\r\n  return <MeetupList meetups={props.meetups} />;\r\n};\r\n\r\n/*\r\n// 요청이 들어올 때 마다 실행 -> 요청이 들어올 때까지 페이지가 만들어지길 기다려야함\r\n// 매초 여러 번 바뀌는 데이터를 가지고 있을 때 사용\r\nexport const getServerSideProps = async (context) => {\r\n    //context로 요청객체 접속 가능 \r\n  const req = context.req;\r\n  const res = context.res;\r\n\r\n  return {\r\n    props: {\r\n      meetups: DUMMY_MEETUPS,\r\n    },\r\n  };\r\n};\r\n*/\r\n\r\n\r\n// revalidate 시간마다 실행\r\n// 데이터를 다시 만들고 패치하는 것보다 빠르다. -> 캐시하고 다시 사용하기에\r\nexport const getStaticProps = async () => {\r\n  return {\r\n    props: { meetups: DUMMY_MEETUPS },\r\n    revalidate: 1,\r\n  };\r\n};\r\n\r\nexport default Homepage;\r\n"]},"metadata":{},"sourceType":"module"}