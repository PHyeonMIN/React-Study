{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\yeoboya\\\\git\\\\react_study\\\\EX_16\\\\pages\\\\index.js\";\nimport { MongoClient } from \"mongodb\";\nimport MeetupList from \"../components/meetups/MeetupList\";\n\nconst Homepage = props => {\n  return /*#__PURE__*/_jsxDEV(MeetupList, {\n    meetups: props.meetups\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 10\n  }, this);\n};\n/*\r\n// 요청이 들어올 때 마다 실행 -> 요청이 들어올 때까지 페이지가 만들어지길 기다려야함\r\n// 매초 여러 번 바뀌는 데이터를 가지고 있을 때 사용\r\nexport const getServerSideProps = async (context) => {\r\n    //context로 요청객체 접속 가능 \r\n  const req = context.req;\r\n  const res = context.res;\r\n\r\n  return {\r\n    props: {\r\n      meetups: DUMMY_MEETUPS,\r\n    },\r\n  };\r\n};\r\n*/\n// revalidate 시간마다 실행\n// 데이터를 다시 만들고 패치하는 것보다 빠르다. -> 캐시하고 다시 사용하기에\n\n\nexport const getStaticProps = async () => {\n  const client = await MongoClient.connect(\"mongodb+srv://123:Cgjqv93Nzs1OrsoJ@cluster0.jyvgm.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find().toArray();\n  client.close();\n  return {\n    props: {\n      meetups: meetups.map(meetup => ({\n        title: meetup.title,\n        address: meetup.address,\n        image: meetup.image,\n        id: meetup._id.toString()\n      }))\n    },\n    revalidate: 1\n  };\n};\nexport default Homepage;","map":{"version":3,"sources":["C:/Users/yeoboya/git/react_study/EX_16/pages/index.js"],"names":["MongoClient","MeetupList","Homepage","props","meetups","getStaticProps","client","connect","db","meetupsCollection","collection","find","toArray","close","map","meetup","title","address","image","id","_id","toString","revalidate"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,SAA5B;AACA,OAAOC,UAAP,MAAuB,kCAAvB;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B,sBAAO,QAAC,UAAD;AAAY,IAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAFD;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;AACA,OAAO,MAAMC,cAAc,GAAG,YAAY;AACxC,QAAMC,MAAM,GAAG,MAAMN,WAAW,CAACO,OAAZ,CACnB,mGADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMN,OAAO,GAAG,MAAMK,iBAAiB,CAACE,IAAlB,GAAyBC,OAAzB,EAAtB;AACAN,EAAAA,MAAM,CAACO,KAAP;AAEA,SAAO;AACLV,IAAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAEA,OAAO,CAACU,GAAR,CAAYC,MAAM,KAAK;AACrCC,QAAAA,KAAK,EAACD,MAAM,CAACC,KADwB;AAErCC,QAAAA,OAAO,EAACF,MAAM,CAACE,OAFsB;AAGrCC,QAAAA,KAAK,EAACH,MAAM,CAACG,KAHwB;AAIrCC,QAAAA,EAAE,EAACJ,MAAM,CAACK,GAAP,CAAWC,QAAX;AAJkC,OAAL,CAAlB;AAAX,KADF;AAOLC,IAAAA,UAAU,EAAE;AAPP,GAAP;AASD,CAlBM;AAoBP,eAAepB,QAAf","sourcesContent":["import { MongoClient } from \"mongodb\";\r\nimport MeetupList from \"../components/meetups/MeetupList\";\r\n\r\nconst Homepage = (props) => {\r\n  return <MeetupList meetups={props.meetups} />;\r\n};\r\n\r\n/*\r\n// 요청이 들어올 때 마다 실행 -> 요청이 들어올 때까지 페이지가 만들어지길 기다려야함\r\n// 매초 여러 번 바뀌는 데이터를 가지고 있을 때 사용\r\nexport const getServerSideProps = async (context) => {\r\n    //context로 요청객체 접속 가능 \r\n  const req = context.req;\r\n  const res = context.res;\r\n\r\n  return {\r\n    props: {\r\n      meetups: DUMMY_MEETUPS,\r\n    },\r\n  };\r\n};\r\n*/\r\n\r\n// revalidate 시간마다 실행\r\n// 데이터를 다시 만들고 패치하는 것보다 빠르다. -> 캐시하고 다시 사용하기에\r\nexport const getStaticProps = async () => {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://123:Cgjqv93Nzs1OrsoJ@cluster0.jyvgm.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n  const meetups = await meetupsCollection.find().toArray();\r\n  client.close();\r\n\r\n  return {\r\n    props: { meetups: meetups.map(meetup => ({\r\n        title:meetup.title,\r\n        address:meetup.address,\r\n        image:meetup.image,\r\n        id:meetup._id.toString(),\r\n    })) },\r\n    revalidate: 1,\r\n  };\r\n};\r\n\r\nexport default Homepage;\r\n"]},"metadata":{},"sourceType":"module"}