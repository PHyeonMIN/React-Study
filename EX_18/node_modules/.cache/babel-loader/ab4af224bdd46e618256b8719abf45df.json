{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nlet globalState = {};\nlet listeners = [];\nlet actions = {};\nexport const useStore = () => {\n  _s();\n\n  const setState = useState(globalState)[1];\n\n  const dispatch = (actionIdentifier, payload) => {\n    const newState = actions[actionIdentifier](globalState, payload);\n    globalState = { ...globalState,\n      ...newState\n    };\n\n    for (const listener of listeners) {\n      listener(globalState);\n    }\n  };\n\n  useEffect(() => {\n    listeners.push(setState);\n    return () => {\n      listeners = listeners.filter(li => li !== setState);\n    };\n  }, [setState]);\n  return [globalState, dispatch];\n};\n\n_s(useStore, \"nM5W+84F396yCKDu4U2VhqiPF0o=\");\n\nexport const initStore = (userActions, initialState) => {\n  if (initialState) {\n    globalState = { ...globalState,\n      ...initialState\n    };\n  }\n\n  actions = { ...actions,\n    ...userActions\n  };\n};","map":{"version":3,"sources":["C:/Users/yeoboya/git/react_study/EX_17/src/hooks-store/store.js"],"names":["useState","useEffect","globalState","listeners","actions","useStore","setState","dispatch","actionIdentifier","payload","newState","listener","push","filter","li","initStore","userActions","initialState"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,IAAIC,WAAW,GAAG,EAAlB;AACA,IAAIC,SAAS,GAAG,EAAhB;AACA,IAAIC,OAAO,GAAG,EAAd;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAC5B,QAAMC,QAAQ,GAAGN,QAAQ,CAACE,WAAD,CAAR,CAAsB,CAAtB,CAAjB;;AAEA,QAAMK,QAAQ,GAAG,CAACC,gBAAD,EAAmBC,OAAnB,KAA+B;AAC9C,UAAMC,QAAQ,GAAGN,OAAO,CAACI,gBAAD,CAAP,CAA0BN,WAA1B,EAAuCO,OAAvC,CAAjB;AACAP,IAAAA,WAAW,GAAG,EAAE,GAAGA,WAAL;AAAkB,SAAGQ;AAArB,KAAd;;AAEA,SAAK,MAAMC,QAAX,IAAuBR,SAAvB,EAAkC;AAChCQ,MAAAA,QAAQ,CAACT,WAAD,CAAR;AACD;AACF,GAPD;;AASAD,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,SAAS,CAACS,IAAV,CAAeN,QAAf;AAEA,WAAO,MAAM;AACXH,MAAAA,SAAS,GAAGA,SAAS,CAACU,MAAV,CAAkBC,EAAD,IAAQA,EAAE,KAAKR,QAAhC,CAAZ;AACD,KAFD;AAGD,GANQ,EAMN,CAACA,QAAD,CANM,CAAT;AAQA,SAAO,CAACJ,WAAD,EAAcK,QAAd,CAAP;AACD,CArBM;;GAAMF,Q;;AAwBb,OAAO,MAAMU,SAAS,GAAG,CAACC,WAAD,EAAcC,YAAd,KAA+B;AACtD,MAAIA,YAAJ,EAAkB;AAChBf,IAAAA,WAAW,GAAG,EAAE,GAAGA,WAAL;AAAkB,SAAGe;AAArB,KAAd;AACD;;AACDb,EAAAA,OAAO,GAAG,EAAE,GAAGA,OAAL;AAAc,OAAGY;AAAjB,GAAV;AACD,CALM","sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nlet globalState = {};\r\nlet listeners = [];\r\nlet actions = {};\r\n\r\nexport const useStore = () => {\r\n  const setState = useState(globalState)[1];\r\n\r\n  const dispatch = (actionIdentifier, payload) => {\r\n    const newState = actions[actionIdentifier](globalState, payload);\r\n    globalState = { ...globalState, ...newState };\r\n\r\n    for (const listener of listeners) {\r\n      listener(globalState);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    listeners.push(setState);\r\n\r\n    return () => {\r\n      listeners = listeners.filter((li) => li !== setState);\r\n    };\r\n  }, [setState]);\r\n\r\n  return [globalState, dispatch];\r\n};\r\n\r\n\r\nexport const initStore = (userActions, initialState) => {\r\n  if (initialState) {\r\n    globalState = { ...globalState, ...initialState };\r\n  }\r\n  actions = { ...actions, ...userActions };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}