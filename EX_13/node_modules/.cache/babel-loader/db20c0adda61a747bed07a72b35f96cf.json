{"ast":null,"code":"import { configureStore } from \"@reduxjs/toolkit\";\nimport counterReducer from \"./counter\";\nimport authReducer from \"./auth\"; // configureStore : 여러개의 리듀서를 하나의 리듀서로 쉽게 합칠 수 있다.\n\nconst store = configureStore({\n  reducer: {\n    counter: counterReducer,\n    auth: authReducer\n  }\n});\nexport const counterActions = counterSlice.actions; // 액션 객체 생성 및 고유한 식별자를 생각해내는 작업 X\n\nexport const authActions = authSlice.actions;\nexport default store;\n/*\r\nconst counterReducer = (state = initialState, action) => {\r\n  if (action.type === 'increment') {\r\n    return {\r\n      counter: state.counter + 1,\r\n      showCounter: state.showCounter,       // 설정하지 않으면 객체가 사라짐 ( undefined )\r\n    };\r\n  }\r\n  if (action.type === \"increase\") {\r\n    return {\r\n      counter: state.counter + action.amount,\r\n      showCounter: state.showCounter,\r\n    };\r\n  }\r\n  if (action.type === \"decrement\") {\r\n    return {\r\n      counter: state.counter - 1,\r\n      showCounter: state.showCounter,\r\n    };\r\n  }\r\n  if (action.type === \"toggle\") {\r\n    return {\r\n      showCounter: !state.showCounter,\r\n      counter: state.counter,\r\n    };\r\n  }\r\n\r\n  return state;\r\n};\r\n\r\n// 리덕스 스토어를 만들어준다.\r\nconst store = createStore(counterReducer);  // 하나의 리듀서만 넣어준다.\r\n*/","map":{"version":3,"sources":["C:/Users/yeoboya/git/react_study/EX_12/src/store/index.js"],"names":["configureStore","counterReducer","authReducer","store","reducer","counter","auth","counterActions","counterSlice","actions","authActions","authSlice"],"mappings":"AAAA,SAASA,cAAT,QAA+B,kBAA/B;AAEA,OAAOC,cAAP,MAA2B,WAA3B;AACA,OAAOC,WAAP,MAAwB,QAAxB,C,CAGA;;AACA,MAAMC,KAAK,GAAGH,cAAc,CAAC;AAC3BI,EAAAA,OAAO,EAAE;AAAEC,IAAAA,OAAO,EAAEJ,cAAX;AAA4BK,IAAAA,IAAI,EAAEJ;AAAlC;AADkB,CAAD,CAA5B;AAIA,OAAO,MAAMK,cAAc,GAAGC,YAAY,CAACC,OAApC,C,CAA6C;;AACpD,OAAO,MAAMC,WAAW,GAAGC,SAAS,CAACF,OAA9B;AAEP,eAAeN,KAAf;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\r\n\r\nimport counterReducer from \"./counter\";\r\nimport authReducer from \"./auth\";\r\n\r\n\r\n// configureStore : 여러개의 리듀서를 하나의 리듀서로 쉽게 합칠 수 있다.\r\nconst store = configureStore({\r\n  reducer: { counter: counterReducer , auth: authReducer },\r\n});\r\n\r\nexport const counterActions = counterSlice.actions; // 액션 객체 생성 및 고유한 식별자를 생각해내는 작업 X\r\nexport const authActions = authSlice.actions;\r\n\r\nexport default store;\r\n\r\n\r\n\r\n\r\n\r\n/*\r\nconst counterReducer = (state = initialState, action) => {\r\n  if (action.type === 'increment') {\r\n    return {\r\n      counter: state.counter + 1,\r\n      showCounter: state.showCounter,       // 설정하지 않으면 객체가 사라짐 ( undefined )\r\n    };\r\n  }\r\n  if (action.type === \"increase\") {\r\n    return {\r\n      counter: state.counter + action.amount,\r\n      showCounter: state.showCounter,\r\n    };\r\n  }\r\n  if (action.type === \"decrement\") {\r\n    return {\r\n      counter: state.counter - 1,\r\n      showCounter: state.showCounter,\r\n    };\r\n  }\r\n  if (action.type === \"toggle\") {\r\n    return {\r\n      showCounter: !state.showCounter,\r\n      counter: state.counter,\r\n    };\r\n  }\r\n\r\n  return state;\r\n};\r\n\r\n// 리덕스 스토어를 만들어준다.\r\nconst store = createStore(counterReducer);  // 하나의 리듀서만 넣어준다.\r\n*/\r\n"]},"metadata":{},"sourceType":"module"}