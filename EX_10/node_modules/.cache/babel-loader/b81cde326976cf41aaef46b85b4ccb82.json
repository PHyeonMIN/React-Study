{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yeoboya\\\\git\\\\react_study\\\\EX_10\\\\src\\\\components\\\\NewTask\\\\NewTask.js\";\nimport { useState } from 'react';\nimport Section from '../UI/Section';\nimport TaskForm from './TaskForm';\n\nconst NewTask = props => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const enterTaskHandler = async taskText => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch('https://react-http-6b4a6.firebaseio.com/tasks.json', {\n        method: 'POST',\n        body: JSON.stringify({\n          text: taskText\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n\n      if (!response.ok) {\n        throw new Error('Request failed!');\n      }\n\n      const data = await response.json();\n      const generatedId = data.name; // firebase-specific => \"name\" contains generated id\n\n      const createdTask = {\n        id: generatedId,\n        text: taskText\n      };\n      props.onAddTask(createdTask);\n    } catch (err) {\n      setError(err.message || 'Something went wrong!');\n    }\n\n    setIsLoading(false);\n  };\n\n  return /*#__PURE__*/React.createElement(Section, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TaskForm, {\n    onEnterTask: enterTaskHandler,\n    loading: isLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }), error && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, error));\n};\n\nexport default NewTask;","map":{"version":3,"sources":["C:/Users/yeoboya/git/react_study/EX_10/src/components/NewTask/NewTask.js"],"names":["useState","Section","TaskForm","NewTask","props","isLoading","setIsLoading","error","setError","enterTaskHandler","taskText","response","fetch","method","body","JSON","stringify","text","headers","ok","Error","data","json","generatedId","name","createdTask","id","onAddTask","err","message"],"mappings":";AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AACzB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,IAAD,CAAlC;;AAEA,QAAMS,gBAAgB,GAAG,MAAOC,QAAP,IAAoB;AAC3CJ,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,IAAAA,QAAQ,CAAC,IAAD,CAAR;;AACA,QAAI;AACF,YAAMG,QAAQ,GAAG,MAAMC,KAAK,CAC1B,oDAD0B,EAE1B;AACEC,QAAAA,MAAM,EAAE,MADV;AAEEC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,UAAAA,IAAI,EAAEP;AAAR,SAAf,CAFR;AAGEQ,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT;AAHX,OAF0B,CAA5B;;AAWA,UAAI,CAACP,QAAQ,CAACQ,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,iBAAV,CAAN;AACD;;AAED,YAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAT,EAAnB;AAEA,YAAMC,WAAW,GAAGF,IAAI,CAACG,IAAzB,CAlBE,CAkB6B;;AAC/B,YAAMC,WAAW,GAAG;AAAEC,QAAAA,EAAE,EAAEH,WAAN;AAAmBN,QAAAA,IAAI,EAAEP;AAAzB,OAApB;AAEAN,MAAAA,KAAK,CAACuB,SAAN,CAAgBF,WAAhB;AACD,KAtBD,CAsBE,OAAOG,GAAP,EAAY;AACZpB,MAAAA,QAAQ,CAACoB,GAAG,CAACC,OAAJ,IAAe,uBAAhB,CAAR;AACD;;AACDvB,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GA7BD;;AA+BA,sBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAU,IAAA,WAAW,EAAEG,gBAAvB;AAAyC,IAAA,OAAO,EAAEJ,SAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGE,KAAK,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIA,KAAJ,CAFZ,CADF;AAMD,CAzCD;;AA2CA,eAAeJ,OAAf","sourcesContent":["import { useState } from 'react';\n\nimport Section from '../UI/Section';\nimport TaskForm from './TaskForm';\n\nconst NewTask = (props) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const enterTaskHandler = async (taskText) => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(\n        'https://react-http-6b4a6.firebaseio.com/tasks.json',\n        {\n          method: 'POST',\n          body: JSON.stringify({ text: taskText }),\n          headers: {\n            'Content-Type': 'application/json',\n          },\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error('Request failed!');\n      }\n\n      const data = await response.json();\n\n      const generatedId = data.name; // firebase-specific => \"name\" contains generated id\n      const createdTask = { id: generatedId, text: taskText };\n\n      props.onAddTask(createdTask);\n    } catch (err) {\n      setError(err.message || 'Something went wrong!');\n    }\n    setIsLoading(false);\n  };\n\n  return (\n    <Section>\n      <TaskForm onEnterTask={enterTaskHandler} loading={isLoading} />\n      {error && <p>{error}</p>}\n    </Section>\n  );\n};\n\nexport default NewTask;\n"]},"metadata":{},"sourceType":"module"}